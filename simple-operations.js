// Однострочный комментарий

/*
многострочный
комментарий
для описания функции или отключения большого блока кода
*/


// Одновременно выведет в консоль и на экране браузера сообщение

let message = "Привет, переменная!";
document.write (message);
cpnsole.log (message);



let a = 5;
let b = 10;
let sum = a + b;
document.write('Сумма: ' + sum);
console.log('Сумма: ' + sum);


// Три способа объявления переменных: 
// let - используется для объявления переменных с блочной областью видимости и не позволяет их переопределять в той же области
// var - используется для объявления переменных с функциональной областью видимости и позволяет их переопределять
// const - используется для объявления констант, значение которых не может изменяться

// выдаст ошибку потому что переменная const не может изменяться
const num = 10;
num = 15;
document.write(num);




// Типы данных (7 типов)
1. Число: целые, дробные, специальные значения данного типа (-infinity при делении на 0 и -not-a-number NaN при умножении или делении числа на строку)
2. Строка. пишется в кавычках ""
3. Символ var sym = Symbol();
4. Логическое значение boolean: истина true или ложь false
5. Null - не существует
6. Undefined - не определено, значения не имеет, но существует 



// Строки используются для хранения текста и могут быть заключены в одинарные '', двойные "", или обратные `` кавычки
let greeting = "Привет, мир!";
let anotherGreeting = 'Привет, мир!';
let templateGreeting = `Привет, ${name}!`; //в этом примере мы можем вставлять переменные внутрь строки с помощью ${}
console.log(templateGreeting);





// Выражения могут быть числами, строками или результатом работы операторов
let a = 3 + 5; //сложение для чисел
let b = "Привет, " + "мир!"; //сложение для строк

// сложение разных типов данных - числа и строки
let number = 5;
let string = " бананов";
let result = number + string;


// Операторы есть арифметические, логические, операторы сравнения и т.д.
// && - и
// || - или
// ! - не
// == - сравнение

// неявное преобразование типов - при использовании оператора умножения с числом и строкой let a = 5; let b = "2". Результат будет тип данных число 10